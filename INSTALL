Capricorn Installation Instructions

Part A - Getting Data into Capricorn

Data from your RIS or data warehouse is loaded into our exammeta table.

Columns are as follows:
+-----------------+-------------+------+-----+---------+-------+
| Field           | Type        | Null | Key | Default | Extra |
+-----------------+-------------+------+-----+---------+-------+
| InternalID      | varchar(30) | NO   | PRI | NULL    |       |
| AccessionNumber | varchar(8)  | YES  |     | NULL    |       |
| LastName        | varchar(25) | NO   |     | NULL    |       |
| FirstName       | varchar(25) | NO   |     | NULL    |       |
| PatientID       | tinyint(11) | NO   |     | NULL    |       |
| ExamCode        | varchar(16) | YES  |     | NULL    |       |
| TraineeID       | int(11)     | YES  | MUL | NULL    |       |
| AttendingID     | int(11)     | YES  |     | NULL    |       |
| OrganizationID  | int(11)     | YES  |     | NULL    |       |
| Organization    | varchar(8)  | NO   |     | NULL    |       |
| CompletedDTTM   | datetime    | YES  | MUL | NULL    |       |
| InquiryDTTM     | datetime    | YES  |     | NULL    |       |
| DraftDTTM       | datetime    | YES  |     | NULL    |       |
| PrelimDTTM      | datetime    | YES  |     | NULL    |       |
| ResidentYear    | int(11)     | YES  |     | NULL    |       |
+-----------------+-------------+------+-----+---------+-------+

In our installation we use tools/updateExam.php to pull from a shadow copy of our RIS database.
You will need to find a similar mechanism to populate this information in your institution.

Codes in the examcodedefinition table will also need to be loaded from your chargemaster

examcodedefinition
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| InternalCode | varchar(18) | NO   | PRI |         |       |
| ORG          | varchar(7)  | YES  |     | NULL    |       |
| ExamCode     | varchar(10) | YES  | MUL | NULL    |       |
| Description  | varchar(73) | YES  |     | NULL    |       |
| Department   | varchar(10) | YES  |     | NULL    |       |
| Modality     | varchar(8)  | YES  |     | NULL    |       |
| BodySite     | varchar(10) | YES  |     | NULL    |       |
| SubSpecialty | varchar(9)  | YES  |     | NULL    |       |
| Rotation     | varchar(9)  | YES  |     | NULL    |       |
| Section      | varchar(6)  | YES  |     | NULL    |       |
| Type         | varchar(6)  | YES  |     | NULL    |       |
| Notes        | varchar(16) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+

Although not necessary for function, Capricorn benefits from knowing which rotations each resident was on when the exams were dictated.  In our system, we use QGenda for resident scheduling and have tools/qgendaImporter.php to parse the iCal Schedule downloaded from Qgenda.com into the residentRotation table.  

In order for qgendaImporter to work correctly, the qGendaName must be populated in the residentiddefinition table.

qgendaImporter works by adding data to the residentrotationraw table and then parsing it into 
the residentrotation table.



residentrotation
+-------------------+-------------+------+-----+---------+-------+
| Field             | Type        | Null | Key | Default | Extra |
+-------------------+-------------+------+-----+---------+-------+
| TraineeID         | int(11)     | NO   |     | NULL    |       |
| Rotation          | varchar(25) | NO   |     | NULL    |       |
| RotationStartDate | date        | NO   |     | NULL    |       |
| RotationEndDate   | date        | NO   |     | NULL    |       |
+-------------------+-------------+------+-----+---------+-------+

residentiddefinition
+------------------+-------------+------+-----+---------+-------+
| Field            | Type        | Null | Key | Default | Extra |
+------------------+-------------+------+-----+---------+-------+
| TraineeID        | int(11)     | NO   | PRI | NULL    |       |
| FirstName        | varchar(25) | NO   |     | NULL    |       |
| MiddleName       | varchar(25) | NO   |     |         |       |
| LastName         | varchar(25) | NO   |     | NULL    |       |
| IsCurrentTrainee | varchar(5)  | NO   |     | N       |       |
| StartDate        | date        | NO   |     | NULL    |       |
| QGendaName       | varchar(25) | YES  |     | NULL    |       |
+------------------+-------------+------+-----+---------+-------+

The following table is used for display of attending names.  As Capricorn adds new studies, it will look up the studys' attending name from RIS and add here.  This way new attendings will be automatically added as soon as they interprete a study.

attendingiddefinition
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| AttendingID | int(11)     | NO   | PRI | NULL    |       |
| LastName    | varchar(45) | NO   |     | NULL    |       |
| FirstName   | varchar(45) | NO   |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+


Capricorn handles logins in one of two ways.  First by registration.  New users can register by going through create_account.html, which will run their name in Capricorn to ensure they are a current resident, then use find_user.php and add_user.php to add an entry into LoginMember table.

Alternatively, Capricorn supports LDAP, which allows the user to simply use their email account to log into Capricorn.  checklogin.php can work with both - it will first check LDAP, then if user is not found, check LoginMember.

One more caveat: TraineeID 99999999 is an administrative user.  An account associated with this TraineeID logs into admin/index.php instead of login_success.php.  Generally this should be a LoginMember entry.  An easy way is just to define this user in ResidentIDDefinition, then go through create_account.html to create a password for it.

loginmember
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| TraineeID   | int(11)     | NO   | PRI | NULL    |       |
| Username    | varchar(25) | NO   |     | NULL    |       |
| PasswordHash| text        | NO   |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+





Part B - Web page display portal configuration
1. Edit capricornConfig.php.dist with settings for your site and save-as capricornConfig.php
2. Edit ldapconf.php.dist with settings for your site and save-as ldapconfig.php


Part C - 
